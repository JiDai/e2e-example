const chromeSettings = {
    silent: true,
    desiredCapabilities: {
        browserName: 'chrome',
        acceptSslCerts: true,
    },
};

module.exports = {
    // Where are located test
    src_folders: ['./tests'],
    // Where are located reports generated by Nightwatch
    output_folder: './reports',
    // Where are located NightWatch Page Objects representing structure of our pages
    page_objects_path: './pages',
    // Where are located the global variables file
    globals_path: './globals.js',
    // Where are located the custom assertions for Nightwatch
    custom_assertions_path: './assertions',
    // Where are located the custom commands for Nightwatch
    custom_commands_path: './commands',
    // Colors may mess the output
    disable_colors: process.env.NIGHTWATCH_NO_COLOR === 'true',

    selenium: {
        // Tell selenium we launch process manually
        start_process: false,

        //// You can also use local binaries with these settings rather than the docker selenuim server
        //// For that, you must specify  path to binaries
        //// Prefer use a specific chromedriver version rather than one included in selenium-server-standalone
        //// You will able to use a more recent version (I had problems with included version)
        //// Here is an example :
        // start_process: true,
        // server_path: './bin/selenium-server-standalone-3.8.1.jar',
        // cli_args: {
        //     'webdriver.chrome.driver': './bin/chromedriver',
        // },
    },

    test_settings: {
        detailed_output: true,

        default: {
            selenium_host: process.env.SELENIUM_HOST || 'localhost',
            ...chromeSettings,
        },

        // Browser configurations
        chrome: chromeSettings,
        firefox: {
            silent: true,
            desiredCapabilities: {
                browserName: 'firefox',
                acceptSslCerts: true,
            },
        },
    },
};
